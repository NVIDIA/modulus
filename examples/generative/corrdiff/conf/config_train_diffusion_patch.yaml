# SPDX-FileCopyrightText: Copyright (c) 2023 - 2024 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

hydra:
  job:
    chdir: False

defaults:
  - config_train_base

## Main options
outdir: "./output_diffusion"   
  # Where to save the results
arch: ddpmpp-cwb
  # Network architecture [ddpmpp, ddpmpp-cwb, ncsnpp, adm, ddpmpp-cwb-v0-regression]
precond: resloss
  # Preconditioning & loss function [vp, ve, edm, unetregression, resloss]
task: diffusion
  # Which model to train [regression, diffusion]

## I/O
regression_checkpoint_path: checkpoints/regression.mdlus
  # Where to save the checkpoints

## Hyperparameters
batch_size_global: 2560
  # Total batch size
batch_size_gpu: 20
  # Limit batch size per GPU
grad_clip_threshold: 1e5
lr_decay: 0.7

patch_shape_x: 64
patch_shape_y: 64
  # Patch size. Patch-based training will be utilized if these dimensions differ from 
  # img_shape_x and img_shape_y
patch_num: 10
  # Number of patches extracted from a single sample. The total number of patches is 
  # defined as patch_num * batch_size_global
hr_mean_conditioning: True
  # High-res mean (regression's output) as additional condition
gridtype: "learnable"
  # can be either linear, sinusoidal, or learnable
N_grid_channels: 100
