# SPDX-FileCopyrightText: Copyright (c) 2023 - 2024 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

checkpoint: 025874
dataset_name: intraining_cyclones

hydra:
  job:
    chdir: True
    name: condiffusion_v2_stathi
  run:
    dir: /lustre/fsw/portfolios/nvr/projects/nvr_earth2_e2/corrdiff/training_output/${hydra:job.name}/inference/${checkpoint}_${dataset_name}_s_max_${S_max}/

image_outdir: .
  # Where to save the output images

## Main options
res_ckpt_filename: /lustre/fsw/portfolios/nvr/projects/nvr_earth2_e2/corrdiff/training_output/condiffusion_v2_stathi/checkpoints/training-state-diffusion-${checkpoint}.mdlus 
  # Checkpoint filename for the generative model  
reg_ckpt_filename: /lustre/fsw/portfolios/nvr/projects/nvr_earth2_e2/corrdiff/regression/training-state-regression-053327.mdlus
  # Checkpoint filename for the mean predictor model
seeds: "0-31"
  # Random seeds used for generation
class_idx: null  
  # Class label. Null is random
num_steps: 18
  # Number of sampling steps
sample_res: "full"
  # Sampling resolution
regression_only: false
  # regression only inference
diffusion_only: true
  # diffusion only inference
sampling_method: deterministic
  # Sampling method ["stochastic", "deterministic"]
seed_batch_size: 32
  # batch size across the seed dimension
force_fp16: true
  # Whether to force fp16 precision for the model. If false, it'll use the precision
  # specified upon training.
num_writer_workers: 1
  # number of workers to use for writing file
  # To support multiple workers a threadsafe version of the netCDF library must be used
use_torch_compile: True
  # whether to use torch.compile on the diffusion model
  # this will make the first time stamp generation very slow due to compilation overheads
  # but will significantly speed up subsequent inference runs

## Data options
patch_shape_x: 448
patch_shape_y: 448
  # Patch size. Patch-based sampling will be utilized if these dimensions differ from 
  # img_shape_x and img_shape_y
overlap_pixels: 0 
  # Number of overlapping pixels between adjacent patches
boundary_pixels: 0
  # Number of boundary pixels to be cropped out. 2 is recommanded to address the boundary
  # artifact.
hr_mean_conditioning: false
  # High-res mean (regression's output) as additional condition
gridtype: "sinusoidal"
  # can be either linear, sinusoidal, or learnable
N_grid_channels: 4
times:
  # CYCLONES
  - 2018-07-09T18:00:00
  - 2018-07-10T06:00:00
  - 2018-07-10T09:00:00
  - 2018-07-10T12:00:00
  - 2018-07-10T15:00:00
  - 2018-07-10T18:00:00
  - 2018-07-10T21:00:00
  - 2018-07-11T00:00:00
  - 2018-07-11T06:00:00
  - 2018-07-11T12:00:00
  - 2019-08-08T15:00:00
  - 2019-08-08T18:00:00
  - 2019-08-08T21:00:00
  - 2019-08-09T00:00:00
  - 2019-08-09T03:00:00
  - 2019-09-03T06:00:00
  - 2019-09-03T12:00:00
  - 2019-09-03T18:00:00
  - 2019-09-04T00:00:00
  - 2019-09-29T18:00:00
  - 2019-09-30T00:00:00
  - 2019-09-30T03:00:00
  - 2019-09-30T06:00:00
  - 2019-09-30T09:00:00
  - 2019-09-30T12:00:00
  - 2019-09-30T15:00:00
  - 2019-09-30T18:00:00
  - 2019-09-30T21:00:00
  - 2019-10-01T00:00:00
  - 2020-08-02T15:00:00
  - 2020-08-02T18:00:00
  - 2020-08-02T21:00:00
  - 2020-08-03T00:00:00
  - 2020-08-03T03:00:00
  - 2020-08-03T06:00:00
  - 2020-08-03T09:00:00
  - 2020-08-03T12:00:00
# RANDOM
  - 2018-11-11T02:00:00
  - 2018-03-09T23:00:00
  - 2018-09-25T20:00:00
  - 2020-12-12T21:00:00
  - 2020-08-25T11:00:00
  - 2018-12-17T22:00:00
  - 2018-10-26T19:00:00
  - 2020-05-30T19:00:00
  - 2019-03-01T18:00:00
  - 2019-10-26T07:00:00
  - 2019-09-14T15:00:00
  - 2020-06-16T18:00:00
  - 2018-09-24T20:00:00
  - 2020-12-13T15:00:00
  - 2018-02-20T20:00:00
  - 2020-04-03T23:00:00
  - 2020-01-13T16:00:00
  - 2020-07-24T06:00:00
  - 2020-07-27T02:00:00
  - 2020-10-11T21:00:00
  - 2018-06-29T15:00:00
  - 2019-07-13T14:00:00
  - 2020-06-06T18:00:00
  - 2019-05-12T10:00:00
  - 2018-07-09T03:00:00
  - 2019-01-14T08:00:00
  - 2020-04-14T03:00:00
  - 2018-02-23T19:00:00
  - 2018-08-29T18:00:00
  - 2019-09-09T20:00:00
  - 2019-06-14T23:00:00
  - 2020-09-09T03:00:00
  - 2019-10-13T21:00:00
  - 2018-12-06T21:00:00
  - 2019-05-12T14:00:00
  - 2018-11-20T07:00:00
  - 2020-05-21T05:00:00
  - 2020-11-25T08:00:00
  - 2019-06-18T04:00:00
  - 2019-03-09T01:00:00
  - 2020-01-23T18:00:00
  - 2018-03-25T02:00:00
  - 2018-05-30T23:00:00
  - 2018-06-27T02:00:00
  - 2018-07-29T09:00:00
  - 2018-12-04T20:00:00
  - 2019-04-22T09:00:00
  - 2019-10-24T03:00:00
  - 2019-12-07T20:00:00
  - 2020-12-12T08:00:00
  - 2018-02-20T01:00:00
  - 2018-02-19T10:00:00
  - 2020-11-19T05:00:00
  - 2018-05-16T19:00:00
  - 2020-04-27T05:00:00
  - 2018-01-12T21:00:00
  - 2019-11-08T17:00:00
  - 2020-04-03T16:00:00
  - 2018-10-11T22:00:00
  - 2018-12-15T09:00:00
  - 2019-07-17T09:00:00
  - 2020-12-06T16:00:00
  - 2020-08-20T06:00:00

## Weather data options
dataset:
  type: cwb
  train: False
  all_times: True
  data_path: /lustre/fsw/portfolios/nvr/projects/nvr_earth2_e2/corrdiff/data/2023-01-24-cwb-4years.zarr/
  n_history: 0
  in_channels: [0, 1, 2, 3, 4, 9, 10, 11, 12, 17, 18, 19]
  out_channels: [0, 17, 18, 19]
  img_shape_x: 448
  img_shape_y: 448
  roll: false
  add_grid: true
  ds_factor: 4
  min_path: null 
  max_path: null
  global_means_path: null
  global_stds_path: null
  normalization: "v1"

## Deterministic sampler options
sigma_min: null
  # Lowest noise level
sigma_max: null
  # Highest noise level
rho: 7
  # Time step exponent
solver: euler
  # ODE solver [euler, heun]
discretization: "edm"
  # Time step discretization [vp, ve, iddpm, edm]
schedule: "linear"
  # noise schedule sigma(t) [vp, ve, linear]
scaling: null
  # Signal scaling s(t) [vp, none]
S_churn: 0
  # Stochasticity strength
S_min: 0
  # Stochasticity min noise level
S_max: 800
  # Stochasticity max noise level
S_noise: 1
  # Stochasticity noise inflation
