# SPDX-FileCopyrightText: Copyright (c) 2023 - 2024 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

hydra:
  job:
    chdir: true
    name: XAeroNetV
  run:
    dir: ./outputs/${hydra:job.name}

# ┌───────────────────────────────────────────┐
# │            Data Preprocessing             │
# └───────────────────────────────────────────┘  

num_voxels_x: 700                                    # Number of voxels in x direction
num_voxels_y: 256                                    # Number of voxels in y direction
num_voxels_z: 128                                    # Number of voxels in z direction
spacing: 0.015                                       # Spacing between the voxels (unit is meters)
grid_origin_x: -3.08                                 # Origin of the grid in x direction
grid_origin_y: -1.92                                 # Origin of the grid in y direction
grid_origin_z: -0.32                                 # Origin of the grid in z direction
num_partitions: 7                                    # Number of partitions for each voxel grid
partition_width: 100                                 # Width of each partition (in x-direction only)
halo_width: 40                                       # Width of the halo region (in x-direction only)
data_path: /data/drivaer_aws/drivaer_data_full       # Path to the raw data
num_preprocess_workers: 32                           # Number of workers for data preprocessing
save_vti: false                                      # Save a .vti file for the preprocessed voxel data

# ┌───────────────────────────────────────────┐
# │           Model Configuration             │
# └───────────────────────────────────────────┘

initial_hidden_dim: 64                               # Hidden dimension in the first level
activation: gelu                                     # Activation function
use_attn_gate: true                                  # Use attention gate
attn_intermediate_channels: 256                      # Intermediate channels in the attention gate

# ┌───────────────────────────────────────────┐
# │          Training Configuration           │
# └───────────────────────────────────────────┘

h5_path: drivaer_aws_h5                             # Path to the h5 files containing the voxel grids for training
validation_h5_path: drivaer_aws_h5_validation       # Path to the h5 files containing the voxel grids for validation
stats_file: global_stats.json                       # Path to the global statistics (.json file)
checkpoint_filename: model_checkpoint.pth           # Filename of the model checkpoint
num_epochs: 2000                                    # Number of epochs
start_lr: 0.00015                                   # Initial learning rate (cos annealing schedule is used) 
end_lr: 0.0000005                                   # Final learning rate (cos annealing schedule is used)                              
save_checkpoint_freq: 5                             # Frequency of saving the model checkpoint
validation_freq: 50                                 # Frequency of validation
continuity_lambda: 0.05                             # Continuity loss weight

# ┌───────────────────────────────────────────┐
# │        Performance Optimization           │
# └───────────────────────────────────────────┘

gradient_checkpointing: true                        # use activation checkpointing
enable_cudnn_benchmark: true                        # Enable cudnn benchmark