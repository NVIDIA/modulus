# Copyright (c) 2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

full_field: &FULL_FIELD

  batch_size: 1
  dt: 1
  n_history: 0
  crop_size_x: 32
  crop_size_y: 32
  train_data_path: '/lustre/fsw/sw_climate_fno/cwb-rwrf-2211/all_ranges'
  test_data_path: '/lustre/fsw/sw_climate_fno/cwb-rwrf-2211/all_ranges'
  num_data_workers: 3
  min_path: '/lustre/fsw/sw_climate_fno/cwb-rwrf-2211/stats/global_min.npy'
  max_path: '/lustre/fsw/sw_climate_fno/cwb-rwrf-2211/stats/global_max.npy'
  #time_means_path: '/tmp/dataset/cwb/stats/time_means.npy'
  global_means_path: '/lustre/fsw/sw_climate_fno/cwb-rwrf-2211/stats/global_means.npy'
  global_stds_path: '/lustre/fsw/sw_climate_fno/cwb-rwrf-2211/stats/global_stds.npy'
  normalization: 'zscore'     #minmax
  add_grid: !!bool False      #adds position embedding
  N_grid_channels: 0
  gridtype: 'sinusoidal' #options 'sinusoidal' or 'linear'


#cwb: 3 channels 17,18,19
full_field_train_last_chans_grid_crop64: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [17, 18, 19] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16.17.18,19]
  out_channels: [17, 18, 19] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
  roll: !!bool False
  patch_size: 64
  crop_size_x: 64
  crop_size_y: 64
  add_grid: !!bool True      #adds position embedding
  N_grid_channels: 4


full_field_val_last_chans_grid_crop64: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [17, 18, 19] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
  out_channels: [17, 18, 19] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
  roll: !!bool False
  patch_size: 64
  crop_size_x: 448
  crop_size_y: 448
  add_grid: !!bool True      #adds position embedding
  N_grid_channels: 4



#cwb: 3 channels 14,15,16
full_field_train_crop64: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [14, 15, 16] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16.17.18,19]
  out_channels: [14, 15, 16] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
  roll: !!bool False
  patch_size: 64
  crop_size_x: 64
  crop_size_y: 64


full_field_val_crop64: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [14, 15, 16] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
  out_channels: [14, 15, 16] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
  roll: !!bool False
  patch_size: 64
  crop_size_x: 448
  crop_size_y: 448


#era5
full_field_train: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [14, 15, 16] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
  out_channels: [14, 15, 16] #[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
  roll: !!bool False
  patch_size: 32
  crop_size_x: 128 #450
  crop_size_y: 128  #450

full_field_val: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 32
  crop_size_x: 704
  crop_size_y: 1408

full_field_train_crop128: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 128
  crop_size_y: 128

full_field_val_crop128: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 640
  crop_size_y: 1280

full_field_train_crop128_pred_1step: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 128
  crop_size_y: 128
  n_history: 0   #current frame --> next frame

full_field_train_crop128_pred_1step_val: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 640
  crop_size_y: 1280
  n_history: 0   #current frame --> next frame

full_field_train_crop128_pred_2step: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 128
  crop_size_y: 128
  n_history: 0   #current frame --> next frame
  dt: 2

full_field_train_crop128_pred_5step: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 128
  crop_size_y: 128
  n_history: 0   #current frame --> next frame
  dt: 5

full_field_train_crop128_pred_10step: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 128
  crop_size_y: 128
  n_history: 0   #current frame --> next frame
  dt: 10

full_field_train_crop128_pred_30step: #config for single gpu training to catch bugs and overfit
  <<: *FULL_FIELD
  in_channels: [0, 1, 2]
  out_channels: [0, 1, 2]
  roll: !!bool False
  patch_size: 128
  crop_size_x: 128
  crop_size_y: 128
  n_history: 0   #current frame --> next frame
  dt: 30