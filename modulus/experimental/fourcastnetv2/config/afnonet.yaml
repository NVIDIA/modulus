# Copyright (c) 2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

full_field: &BASE_CONFIG

    # metadata file for the dataset
    metadata_json_path: "/metadata/data.json"

    # data 
    train_data_path: "/train"
    valid_data_path: "/test"
    exp_dir: "/runs"

    # files used for normalization of the data
    min_path: "/stats/mins.npy"
    max_path: "/stats/maxs.npy"
    time_means_path:   "/stats/time_means.npy"
    global_means_path: "/stats/global_means.npy"
    global_stds_path:  "/stats/global_stds.npy"
    time_diff_means_path: "/stats/time_diff_means.npy"
    time_diff_stds_path: "/stats/time_diff_stds.npy"

    loss: "l2"
    lr: 1E-3
    scheduler: "CosineAnnealingLR" # "ReduceLROnPlateau"
    scheduler_T_max: 150
    lr_warmup_steps: 0
    weight_decay: 0.0 # 0.1

    # wireup stuff
    wireup_info: "mpi"
    wireup_store: "tcp"

    num_data_workers: 4
    num_visualization_workers: 2
    dt: 1 # how many timesteps ahead the model will predict
    n_history: 0 #how many previous timesteps to consider
    prediction_type: "iterative"
    prediction_length: 35 #applicable only if prediction_type == "iterative"
    n_initial_conditions: 5 #applicable only if prediction_type == "iterative"
    valid_autoreg_steps: 20 # number of autoregressive steps for validation

    ics_type: "specify_number"
    save_raw_forecasts: !!bool True
    save_channel: !!bool False
    masked_acc: !!bool False
    maskpath: None
    perturb: !!bool False
    add_noise: !!bool False
    noise_std: 0.
    add_zenith: !!bool False

    N_grid_channels: 0
    gridtype: "sinusoidal" #options "sinusoidal" or "linear"
    roll: !!bool False

    max_epochs: 150
    batch_size: 32
    nettype: "afno:v1"
    patch_size: [8,8]
    num_blocks: 8
    embed_dim: 768
    normalization_layer: "instance_norm"
    skip_fno: "identity" # "linear", "identity" or None
    nested_skip_fno: !!bool True # whether to nest the inner skip connection or have it be sequential, inside the AFNO block
    verbose: False

    #options default, residual
    target: "default" 

    channel_names: ["u10m", "v10m", "t2m", "sp", "msl", "t850", "u1000", "v1000", "z1000", "u850", "v850", "z850", "u500", "v500", "z500", "t500", "z50", "r500", "r850", "tcwv", "u100m", "v100m", "u250", "v250", "z250", "t250", "u100", "v100", "z100", "t100", "u900", "v900", "z900", "t900"]
    normalization: "zscore" #options zscore or minmax
    hard_thresholding_fraction: 1.0

  
    # invariants
    add_grid: !!bool False
    add_orography: !!bool False
    orography_path: /invariants/orography.nc
    add_landmask: !!bool False
    landmask_path: /invariants/land_sea_mask.nc


    finetune: !!bool False

    log_to_screen: !!bool True
    log_to_wandb: !!bool True
    log_video: 10 # if > 0 will log every i-th epoch
    save_checkpoint: !!bool True

    enable_nhwc: !!bool False
    optimizer_type: "FusedAdam"
    optimizer_beta1: 0.9
    optimizer_beta2: 0.999
    optimizer_max_grad_norm: 1.0 
    # this is necessary to have the height be a multiple of the patching size
    crop_size_x: 720
    crop_size_y: 1440
    crop_anchor_x: 0
    crop_anchor_y: 0

    two_step_training: !!bool False

    # Weights and biases configuration
    wandb_name: None # If None, config will be used but you can override it here
    wandb_group: None # If None, will be "era5_wind" + config, but you can override it here
    wandb_project: "distributed sfno training"
    wandb_entity: "sfno-large-model-training" # but your username here

    inf_data_path: "/out_of_sample"

afno_26ch_arxiv_network: &AFNO_26CH
    <<: *BASE_CONFIG
    nettype: "afno:v1"
    lr: 5E-4
    batch_size: 64
    max_epochs: 150

afno_26ch_arxiv_network_finetune:
    <<: *AFNO_26CH
    nettype: "afno:v1"
    lr: 1E-4
    batch_size: 64
    max_epochs: 50
    finetune: !!bool True
    pretrained_checkpoint_path: "/pretrained_checkpoint_path/" # path to pretrained checkpoint

afno_26ch_arxiv_network_test_config:
    <<: *AFNO_26CH
    lr: 1E-4
    n_train_samples: 32
    n_eval_samples: 32 
    batch_size: 64
    max_epochs: 1
    scheduler_T_max: 2

afno_26ch_optimized_network: 
    <<: *AFNO_26CH
    nettype: "afno"
    lr: 5E-4
    batch_size: 64
    max_epochs: 150

afno_26ch_optimized_network_finetune:
    <<: *AFNO_26CH
    nettype: "afno"
    lr: 1E-4
    batch_size: 64
    max_epochs: 50
    finetune: !!bool True
    pretrained_checkpoint_path: "/pretrained_checkpoint_path/" # path to pretrained checkpoint